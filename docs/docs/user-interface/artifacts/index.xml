<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Velociraptor Artifacts on Velociraptor / Dig deeper</title>
    <link>/docs/user-interface/artifacts/</link>
    <description>Recent content in Velociraptor Artifacts on Velociraptor / Dig deeper</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
	<atom:link href="/docs/user-interface/artifacts/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Client Artifacts</title>
      <link>/docs/user-interface/artifacts/client_artifacts/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/user-interface/artifacts/client_artifacts/</guid>
      <description>Now that we understand what artifacts actually are, we are ready to collect artifacts from our endpoints. We will first discuss how to collect an artifact from a single endpoint, and later discuss how to hunt for the artifacts across the entire fleet.
Once we searched and selected the endpoint of interest, we can switch to the &amp;ldquo;Collected Artifacts&amp;rdquo; view.
This page shows the artifacts previously collected on this endpoint.</description>
    </item>
    
    <item>
      <title>Client Event Artifacts</title>
      <link>/docs/user-interface/artifacts/client_events/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/user-interface/artifacts/client_events/</guid>
      <description>Velociraptor&amp;rsquo;s VQL language is unique in that it allows queries to run in the background and take a long time without using CPU resources. This means that VQL is an asynchronous streaming query engine.
Velociraptor has a number of VQL plugins which simply block, waiting for events to occur (These are termed Event plugins). When an event occurs, the query returns the event as a single row which is then streamed to the server to be recorded.</description>
    </item>
    
    <item>
      <title>Server Artifacts</title>
      <link>/docs/user-interface/artifacts/server_artifacts/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/user-interface/artifacts/server_artifacts/</guid>
      <description>We have seen how Velociraptor&amp;rsquo;s VQL language is used to query clients for artifacts relevant to our investigation. It is also possible to run VQL queries on the server in much the same way. On the server, VQL exposes functionality making it possible to manage the server deployment, as well as post process and correlate results from the entire deployment.
In exactly the same way, server side VQL queries are encapsulated in Server Artifacts.</description>
    </item>
    
    <item>
      <title>Server Event Artifacts</title>
      <link>/docs/user-interface/artifacts/server_events/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/user-interface/artifacts/server_events/</guid>
      <description>We have seen how client event VQL queries are run on endpoints and stream client side events to the server. In a similar way, event queries can run on the server to watch for events server side.
Typically server event artifacts monitor the server for the occurrence of some conditions. When these conditions are detected, the artifact will emit a row.
Selecting Server Events in the UI shows a similar screen to the Client Events selection, except that we are now looking at server monitoring artifacts.</description>
    </item>
    
    <item>
      <title>Customizing Artifacts</title>
      <link>/docs/user-interface/artifacts/add_artifacts/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/user-interface/artifacts/add_artifacts/</guid>
      <description>Velociraptor comes with a wide selection of built in artifacts, but the real power of Velociraptor&amp;rsquo;s query language lies in the ability of users to customize and develop their own artifacts - flexibly responding to their own needs. This is really what sets Velociraptor apart from other tools: It is an open platform putting the user in charge of designing their own perfect response and detection system.
As described previously, Artifacts are simply text files in YAML format which encapsulate VQL queries.</description>
    </item>
    
  </channel>
</rss>