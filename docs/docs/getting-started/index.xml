<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Getting Started on Velociraptor - Hunt Evil!</title>
    <link>/docs/getting-started/</link>
    <description>Recent content in Getting Started on Velociraptor - Hunt Evil!</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
	<atom:link href="/docs/getting-started/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Standalone Deployment</title>
      <link>/docs/getting-started/stand_alone/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/getting-started/stand_alone/</guid>
      <description>The simplest way to deploy a Velociraptor server is via a self signed, stand alone deployment. Later we will see how to deploy Velociraptor in production, but this page will help you deploy a stand alone test environment.
System overview Before we start it is useful to see how a Velociraptor deployment looks at a high level:
The administrator uses their browser to connect to the Velociraptor GUI over SSL.</description>
    </item>
    
    <item>
      <title>Deploying Clients</title>
      <link>/docs/getting-started/deploying_clients/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/getting-started/deploying_clients/</guid>
      <description>Velociraptor endpoint agents are called clients. Clients connect to the server and wait for instructions (which mostly consist of VQL statements), they then run any VQL queries and return the result to the server.
There are a number of ways to run clients, depending on your needs. Ultimately, however, the same Velociraptor binary is run with the client configuration file generated in the previous steps providing it with the key material and configuration.</description>
    </item>
    
    <item>
      <title>Deploying in the cloud</title>
      <link>/docs/getting-started/cloud/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/getting-started/cloud/</guid>
      <description>However one of the most important advantages of cloud deployment is the possibility of minting a proper SSL certificate using the free Letsencrypt CA. Velociraptor is able to use the Letsencrypt protocol to obtain its own certificates (and automatically rotate them when they expire).
Step 1: Getting a domain name An SSL certificate says that the DNS name is owned by the server which presents it. Therefore SSL goes hand in hand with DNS.</description>
    </item>
    
    <item>
      <title>Triaging</title>
      <link>/docs/getting-started/triaging/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/getting-started/triaging/</guid>
      <description>We can use Velociraptor to hunt for many artifacts across the network. However ultimately, the Velociraptor agent simply runs VQL to collect its artifacts. What if we can just collect the artifacts interactive?
We certainly can do this!
Triaging a system. When triaging a system our goal is to collect and preserve as much data from the system as possible, as quickly as possible.
First lets see what artifacts come built in with Velociraptor:</description>
    </item>
    
  </channel>
</rss>